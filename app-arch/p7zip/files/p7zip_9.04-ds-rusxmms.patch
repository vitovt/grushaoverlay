diff -dPNur p7zip-9.04~dfsg.1/C/rccrecode.c p7zip-9.04~dfsg.1-ds/C/rccrecode.c
--- p7zip-9.04~dfsg.1/C/rccrecode.c	1970-01-01 03:00:00.000000000 +0300
+++ p7zip-9.04~dfsg.1-ds/C/rccrecode.c	2009-10-28 03:29:23.000000000 +0300
@@ -0,0 +1,71 @@
+#include <pthread.h>
+#include <librcc.h>
+
+static rcc_class_default_charset default_oem[] = {
+    { "ru", "IBM866" },
+    { NULL, NULL }
+};
+
+static rcc_class_default_charset default_iso[] = {
+    { "ru", "CP1251" },
+    { NULL, NULL }
+};
+
+#define ARC_CLASS 0
+#define OUT_CLASS 1
+#define ARCOUT_CLASS 0
+static rcc_class classes[] = {
+    { "oem", RCC_CLASS_STANDARD, NULL, default_oem, "OEM Encoding", 0 },
+    { "out", RCC_CLASS_STANDARD, "LC_CTYPE", NULL, "Output", 0 },
+    { NULL, RCC_CLASS_STANDARD, NULL, NULL, NULL, 0 }
+};
+
+static int initialized = 0;
+static pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
+
+void *rcc_init() {
+    rcc_context ctx;
+    
+    pthread_mutex_lock(&mutex);
+    if (!initialized) {
+	rccInit();
+	rccInitDefaultContext(NULL, 0, 0, classes, 0);
+	rccLoad(NULL, "zip");
+	rccInitDb4(NULL, NULL, 0);
+    }
+    initialized++;
+    pthread_mutex_unlock(&mutex);
+    
+    ctx = rccCreateContext(NULL, 0, 0, classes, 0);
+    if (ctx) rccInitDb4(ctx, NULL, 0);
+    if (ctx) rccLoad(ctx, "zip");
+
+    return ctx;
+}
+
+
+void rcc_free(void *ctx) {
+    if (ctx) rccFreeContext((rcc_context)ctx);
+    
+    pthread_mutex_lock(&mutex);
+    if (initialized == 1) rccFree();
+    initialized--;
+    pthread_mutex_unlock(&mutex);
+}
+
+
+char *rcc_read(void *ctx, const char *string, size_t size) {
+    if (!initialized) {
+	rcc_init();
+	if (!initialized) return NULL;
+    }
+    return rccSizedRecode((rcc_context)ctx, ARC_CLASS, OUT_CLASS, string, size, NULL);
+}
+
+char *rcc_write(rcc_context ctx, const char *string, size_t size) {
+    if (!initialized) {
+	rcc_init();
+	if (!initialized) return NULL;
+    }
+    return rccSizedRecode((rcc_context)ctx, OUT_CLASS, ARCOUT_CLASS, string, size, NULL);
+}
diff -dPNur p7zip-9.04~dfsg.1/C/rccrecode.h p7zip-9.04~dfsg.1-ds/C/rccrecode.h
--- p7zip-9.04~dfsg.1/C/rccrecode.h	1970-01-01 03:00:00.000000000 +0300
+++ p7zip-9.04~dfsg.1-ds/C/rccrecode.h	2009-10-28 03:29:23.000000000 +0300
@@ -0,0 +1,17 @@
+#ifndef _RCC_RECODE_H
+#define _RCC_RECODE_H
+
+# ifdef __cplusplus 
+extern "C" { 
+# endif
+
+    void *rcc_init();
+    void rcc_free(void *ctx);
+    char *rcc_read(void *ctx, const char *string, size_t size);
+    char *rcc_write(void *ctx, const char *string, size_t size);
+
+# ifdef __cplusplus 
+}
+# endif
+
+#endif /* _RCC_RECODE_H */
diff -dPNur p7zip-9.04~dfsg.1/CPP/7zip/Archive/Zip/ZipIn.cpp p7zip-9.04~dfsg.1-ds/CPP/7zip/Archive/Zip/ZipIn.cpp
--- p7zip-9.04~dfsg.1/CPP/7zip/Archive/Zip/ZipIn.cpp	2009-06-27 18:18:14.000000000 +0400
+++ p7zip-9.04~dfsg.1-ds/CPP/7zip/Archive/Zip/ZipIn.cpp	2009-10-28 03:49:06.000000000 +0300
@@ -9,6 +9,8 @@
 #include "../../Common/LimitedStreams.h"
 #include "../../Common/StreamUtils.h"
 
+#include "../../../../C/rccrecode.h"
+
 #include "ZipIn.h"
 
 #define Get16(p) GetUi16(p)
@@ -17,7 +19,17 @@
 
 namespace NArchive {
 namespace NZip {
- 
+
+CInArchive::CInArchive()
+{
+  rccctx = rcc_init();
+}
+
+CInArchive::~CInArchive()
+{
+  rcc_free(rccctx);
+}
+
 HRESULT CInArchive::Open(IInStream *stream, const UInt64 *searchHeaderSizeLimit)
 {
   _inBufMode = false;
@@ -200,12 +212,20 @@
 
 void CInArchive::ReadFileName(UInt32 nameSize, AString &dest)
 {
+  char *rccrec;
+
   if (nameSize == 0)
     dest.Empty();
   char *p = dest.GetBuffer((int)nameSize);
   SafeReadBytes(p, nameSize);
   p[nameSize] = 0;
   dest.ReleaseBuffer();
+
+  rccrec = rcc_read(rccctx, (LPCSTR)dest, 0);
+  if (rccrec) {
+    dest = rccrec;
+    free(rccrec);
+  }
 }
 
 void CInArchive::GetArchiveInfo(CInArchiveInfo &archiveInfo) const
diff -dPNur p7zip-9.04~dfsg.1/CPP/7zip/Archive/Zip/ZipIn.h p7zip-9.04~dfsg.1-ds/CPP/7zip/Archive/Zip/ZipIn.h
--- p7zip-9.04~dfsg.1/CPP/7zip/Archive/Zip/ZipIn.h	2009-06-27 18:18:14.000000000 +0400
+++ p7zip-9.04~dfsg.1-ds/CPP/7zip/Archive/Zip/ZipIn.h	2009-10-28 03:29:23.000000000 +0300
@@ -114,6 +114,10 @@
   ISequentialInStream *CreateLimitedStream(UInt64 position, UInt64 size);
   IInStream* CreateStream();
 
+  void *rccctx;
+  CInArchive();
+  ~CInArchive();
+
   bool IsOpen() const { return m_Stream != NULL; }
 };
   
diff -dPNur p7zip-9.04~dfsg.1/CPP/7zip/Archive/Zip/ZipOut.h p7zip-9.04~dfsg.1-ds/CPP/7zip/Archive/Zip/ZipOut.h
--- p7zip-9.04~dfsg.1/CPP/7zip/Archive/Zip/ZipOut.h	2009-06-27 18:18:14.000000000 +0400
+++ p7zip-9.04~dfsg.1-ds/CPP/7zip/Archive/Zip/ZipOut.h	2009-10-28 05:49:05.000000000 +0300
@@ -49,6 +49,11 @@
   void CreateStreamForCompressing(IOutStream **outStream);
   void CreateStreamForCopying(ISequentialOutStream **outStream);
   void SeekToPackedDataPosition();
+
+  void *rccctx;
+  COutArchive();
+  ~COutArchive();
+  void Recode(CItem &item);
 };
 
 }}
diff -dPNur p7zip-9.04~dfsg.1/CPP/7zip/Archive/Zip/ZipUpdate.cpp p7zip-9.04~dfsg.1-ds/CPP/7zip/Archive/Zip/ZipUpdate.cpp
--- p7zip-9.04~dfsg.1/CPP/7zip/Archive/Zip/ZipUpdate.cpp	2009-06-27 18:18:14.000000000 +0400
+++ p7zip-9.04~dfsg.1-ds/CPP/7zip/Archive/Zip/ZipUpdate.cpp	2009-10-28 05:48:04.000000000 +0300
@@ -87,6 +87,7 @@
     item.NtfsATime = ui.NtfsATime;
     item.NtfsCTime = ui.NtfsCTime;
     item.NtfsTimeIsDefined = ui.NtfsTimeIsDefined;
+    archive.Recode(item);
   }
   else
     isDir = item.IsDir();
@@ -359,9 +360,11 @@
     item.NtfsCTime = ui.NtfsCTime;
     item.NtfsTimeIsDefined = ui.NtfsTimeIsDefined;
 
+    archive.Recode(item);
+
     item.CentralExtra.RemoveUnknownSubBlocks();
     item.LocalExtra.RemoveUnknownSubBlocks();
-    
+
     archive.PrepareWriteCompressedData2((UInt16)item.Name.Length(), item.UnPackSize, item.PackSize, item.LocalExtra.HasWzAesField());
     item.LocalHeaderPosition = archive.GetCurrentPosition();
     archive.SeekToPackedDataPosition();
diff -dPNur p7zip-9.04~dfsg.1/CPP/7zip/Bundles/Alone/makefile p7zip-9.04~dfsg.1-ds/CPP/7zip/Bundles/Alone/makefile
--- p7zip-9.04~dfsg.1/CPP/7zip/Bundles/Alone/makefile	2009-06-27 18:18:14.000000000 +0400
+++ p7zip-9.04~dfsg.1-ds/CPP/7zip/Bundles/Alone/makefile	2009-10-28 03:29:24.000000000 +0300
@@ -244,6 +244,7 @@
 
 
 OBJS=\
+rccrecode.o \
 myGetTickCount.o \
 wine_date_and_time.o \
 myAddExeFlag.o \
diff -dPNur p7zip-9.04~dfsg.1/CPP/7zip/Bundles/Alone/makefile.list p7zip-9.04~dfsg.1-ds/CPP/7zip/Bundles/Alone/makefile.list
--- p7zip-9.04~dfsg.1/CPP/7zip/Bundles/Alone/makefile.list	2009-06-27 18:18:14.000000000 +0400
+++ p7zip-9.04~dfsg.1-ds/CPP/7zip/Bundles/Alone/makefile.list	2009-10-28 03:40:17.000000000 +0300
@@ -192,6 +192,7 @@
  ../../Crypto/ZipStrong.cpp
 
 SRCS_C=\
+ ../../../../C/rccrecode.c \
  ../../../../C/Aes.c \
  ../../../../C/7zStream.c \
  ../../../../C/Bra.c \
diff -dPNur p7zip-9.04~dfsg.1/CPP/7zip/Bundles/Format7zFree/makefile p7zip-9.04~dfsg.1-ds/CPP/7zip/Bundles/Format7zFree/makefile
--- p7zip-9.04~dfsg.1/CPP/7zip/Bundles/Format7zFree/makefile	2009-06-27 18:18:14.000000000 +0400
+++ p7zip-9.04~dfsg.1-ds/CPP/7zip/Bundles/Format7zFree/makefile	2009-10-28 03:29:24.000000000 +0300
@@ -284,6 +284,7 @@
 
 
 OBJS = \
+  rccrecode.o \
   wine_date_and_time.o \
   myGetTickCount.o \
   $(COMMON_OBJS) \
diff -dPNur p7zip-9.04~dfsg.1/CPP/7zip/Bundles/Format7zFree/makefile.list p7zip-9.04~dfsg.1-ds/CPP/7zip/Bundles/Format7zFree/makefile.list
--- p7zip-9.04~dfsg.1/CPP/7zip/Bundles/Format7zFree/makefile.list	2009-06-27 18:18:14.000000000 +0400
+++ p7zip-9.04~dfsg.1-ds/CPP/7zip/Bundles/Format7zFree/makefile.list	2009-10-28 03:34:02.000000000 +0300
@@ -218,6 +218,7 @@
  ../../Crypto/ZipStrong.cpp
 
 SRCS_C=\
+ ../../../../C/rccrecode.c \
  ../../../../C/7zBuf2.c \
  ../../../../C/7zStream.c \
  ../../../../C/Aes.c \
diff -dPNur p7zip-9.04~dfsg.1/makefile.machine p7zip-9.04~dfsg.1-ds/makefile.machine
--- p7zip-9.04~dfsg.1/makefile.machine	2009-06-27 18:18:14.000000000 +0400
+++ p7zip-9.04~dfsg.1-ds/makefile.machine	2009-10-28 03:29:24.000000000 +0300
@@ -14,7 +14,7 @@
 CC_SHARED=-fPIC
 LINK_SHARED=-fPIC -shared
 
-LOCAL_LIBS=-lpthread
+LOCAL_LIBS=-lpthread -lrcc
 LOCAL_LIBS_DLL=$(LOCAL_LIBS) -ldl
 
 OBJ_CRC32=$(OBJ_CRC32_C)
diff -dPNur p7zip-9.04~dfsg.1/makefile.rules p7zip-9.04~dfsg.1-ds/makefile.rules
--- p7zip-9.04~dfsg.1/makefile.rules	2009-06-27 18:18:14.000000000 +0400
+++ p7zip-9.04~dfsg.1-ds/makefile.rules	2009-10-28 03:29:24.000000000 +0300
@@ -586,3 +586,5 @@
 7zCrcT8.o : ../../../../C/7zCrcT8.c
 	$(CC) $(CFLAGS) ../../../../C/7zCrcT8.c
 
+rccrecode.o : ../../../../C/rccrecode.c
+	$(CC) $(CFLAGS) ../../../../C/rccrecode.c
diff -dPNur p7zip-9.04~dfsg.1/CPP/7zip/Archive/Zip/ZipOut.cpp p7zip-9.04~dfsg.1-ds/CPP/7zip/Archive/Zip/ZipOut.cpp
--- p7zip-9.04~dfsg.1/CPP/7zip/Archive/Zip/ZipOut.cpp	2009-06-27 18:18:14.000000000 +0400
+++ p7zip-9.04~dfsg.1-ds/CPP/7zip/Archive/Zip/ZipOut.cpp	2009-10-28 05:49:01.000000000 +0300
@@ -7,9 +7,24 @@
 #include "../../Common/OffsetStream.h"
 #include "../../Common/StreamUtils.h"
 
+#include "../../../../C/rccrecode.h"
+
 namespace NArchive {
 namespace NZip {
 
+COutArchive::COutArchive() {
+    rccctx = rcc_init();
+}
+
+COutArchive::~COutArchive() {
+    rcc_free(rccctx);
+}
+
+void COutArchive::Recode(CItem &item) {
+   char *rccrec = rcc_write(rccctx, (const char *)item.Name, item.Name.Length());
+   if (rccrec) item.Name = rccrec;
+}
+
 void COutArchive::Create(IOutStream *outStream)
 {
   if (!m_OutBuffer.Create(1 << 16))
